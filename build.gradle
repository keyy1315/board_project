plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}


def frontendDir = "$projectDir/src/main/frontend"

sourceSets {
    main {
        resources { srcDirs(["$projectDir/src/main/resources"]) }
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    dependsOn("copyReactBuildFiles") }

task installReact(type: Exec) {
    workingDir("$frontendDir")
    inputs.dir("$frontendDir")
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "bun", "install"
    } else {
        commandLine "bun", "install"
    }
}

task buildReact(type: Exec) {
    dependsOn("installReact")
    workingDir("$frontendDir")
    inputs.dir("$frontendDir")
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "bun", "run", "build"
    } else {
        commandLine "bun", "run", "build"
    }
}

task copyReactBuildFiles(type: Copy) {
    dependsOn("buildReact")
    from("$frontendDir/dist")
    into("$projectDir/src/main/resources/static")
}